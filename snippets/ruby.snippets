#------------------------------------------------------------
#
# Ruby
#
#------------------------------------------------------------
#------------------------------------------------------------
# Basic
#------------------------------------------------------------
snippet def
	def ${1:method_name}
		${2}
	end
snippet if
	if ${1:condition}
		${2}
	end
#------------------------------------------------------------
#
# Rails
#
#------------------------------------------------------------
#------------------------------------------------------------
# Basic
#------------------------------------------------------------
snippet bf
	before_filter :#{1:filter_name}
#------------------------------------------------------------
# Links
#------------------------------------------------------------
snippet liu
	link_to_unless_current '${1:Text}', ${2:link_to}_path
#------------------------------------------------------------
# ActiveRecord associations
#------------------------------------------------------------
snippet beto
	belongs_to :${1:model_name}
snippet ham
	has_many :${1:model_name}
#------------------------------------------------------------
# Routes
#------------------------------------------------------------
snippet mapc
	map.connect '${1:route}', :controller => '${2:controller_name}', :action => '${3:action_name}'
snippet mapr
	map.resources '${1:resources_name}'
#-----------------------------------------------------------
# Validations
#-----------------------------------------------------------
snippet valp
	validates_presence_of :${1}
snippet valc
	validates_confirmation_of :${1}
#-----------------------------------------------------------
# RSpec snippets
#-----------------------------------------------------------
snippet specc
	require 'spec_helper'

	describe ${1:NameOf}Controller do
		${2}
	end
snippet spech
	require 'spec_helper'

	describe ${1:NameOf}Helper do
		${2}
	end
snippet specm
	require 'spec_helper'

	describe ${1:ModelName} do
		${2}
	end
snippet cont
	context '${1}' do
		${2}
	end
snippet desc
	describe '${1}' do
		${2}
	end
snippet it
	it '${1}' do
		${2}
	end
